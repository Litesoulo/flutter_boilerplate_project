targets:
  # DRIFT -------------------------------------------------------------------------------------------------------------
  # JS outputs by the build system are private, we use a `build_to: source` builder
  # afterwards to make them visible in `web/`.
  copy_js:
    auto_apply_builders: false
    dependencies: [$default]
    builders:
      ":copy_compiled_worker_js":
          enabled: true
  $default:
    sources:
      - lib/**
      - web/**
      - "tool/**"
      - pubspec.yaml
      - lib/$lib$
      - $package$
    drift_dev:
        # These options change how drift generates code
        options:
          # Drift analyzes SQL queries at compile-time. For this purpose, it needs to know which sqlite3
          # features will be available. We depend on `sqlite3_flutter_libs`, which lets us use the latest
          # version with fts5 enabled.
          sql:
            dialect: sqlite
            options:
              version: "3.38"
              modules: [fts5]

      # Configuring this builder isn't required for most apps. In our case, we
      # want to compile the web worker in `web/worker.dart` to JS and we use the
      # build system for that.
      build_web_compilers:entrypoint:
        generate_for:
          - web/worker.dart
        options:
          compiler: dart2js
    # DRIFT -----------------------------------------------------------------------------------------------------------

    builders:
      auto_route_generator:auto_router_generator:
        generate_for:
          - lib/src/utils/router/app_router.dart
      auto_route_generator:auto_route_generator:
        generate_for:
          - lib/src/presentation/**_screen.dart
      source_gen|combining_builder:
        options:
          build_extensions:
            '^lib/{{}}.dart': 'lib/generated/{{}}.g.dart'
      json_serializable:
        enabled: true
        generate_for:
          - lib/**.dart
        options:
          any_map: false
          checked: false
          constructor: ""
          create_factory: true
          create_field_map: false
          create_to_json: true
          disallow_unrecognized_keys: false
          explicit_to_json: false
          field_rename: none
          generic_argument_factories: false
          ignore_unannotated: false
          include_if_null: true
      # freezed:
      #   enabled: true
      #   generate_for:
      #     - lib/**.dart
      #   options:
      #     build_extensions:
      #       '^lib/{{}}.dart': 'lib/generated/{{}}.freezed.dart'
      #     generic_argument_factories: true
      #     copy_with: true
      #     equal: true
      #     map:
      #       map: true
      #       map_or_null: false
      #       maybe_map: false
      #     when:
      #       when: false
      #       when_or_null: false
      #       maybe_when: false
      slang_build_runner:
        options:
          base_locale: ru
          translate_var: translations
          fallback_strategy: base_locale
          input_directory: assets/translations/
          output_directory: lib/generated/

builders:
  freezed:
    import: "package:freezed/builder.dart"
    builder_factories: ["freezed"]
    build_extensions: { ".dart": [".freezed.dart"] }
    auto_apply: dependents
    build_to: source
    runs_before: ["json_serializable"]

  json_serializable:
    import: "package:json_serializable/builder.dart"
    builder_factories: ["jsonSerializable"]
    build_extensions: {".dart": ["json_serializable.g.part"]}
    auto_apply: dependents
    build_to: cache

  # 
  copy_compiled_worker_js:
    import: 'tool/builder.dart'
    builder_factories: ["CopyCompiledJs.new"]
    build_to: source
    build_extensions: {'web/worker.dart.js': ['web/drift_worker.js']}